name: Deploy to test VM

on:
  push:
    branches: [ "test" ]
  pull_request:
    branches: [ "test" ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to test VM using ssh-action
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.TEST_HOST }}
        username: ${{ secrets.TEST_HOST_USERNAME }}
        key: ${{ secrets.TEST_HOST_KEY}}
        port: ${{ secrets.TEST_HOST_PORT }}
        command_timeout: 120m
        shell: bash -l {0}
        script: |
          GIT_REPO=git@github.com:andrespp/dash-bra.git
          GIT_BRANCH=test
          APP_PATH=~/dash-br
          DWBR_PATH=../dw-br
          CONDA_ENV=dash-dwbra

          echo `date` >> /tmp/lastrun

          # Check if repo exists, then stop and achive it
          if [ -d $APP_PATH ] ; then
            cd $APP_PATH
            docker compose down
            cd ~/
            mv $APP_PATH "$APP_PATH"_`date  +%F_%N`
          fi

          # Clone repo
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
          git clone $GIT_REPO $APP_PATH
          cd $APP_PATH
          git checkout $GIT_BRANCH

          # Build docker image
          make setup

          # Retrieve data
          cp -alv $DWBR_PATH/data/parquet $APP_PATH/data/

          # Run app
          docker compose up -d
